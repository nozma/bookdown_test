[
["index.html", "1 事前準備 1.1 Rmdファイルについて 1.2 YAMLフィールドの指定 1.3 ファイルの結合 1.4 出力設定", " 1 事前準備 githubで新規リポジトリを作成する。 RStudioからNew Project -&gt; VersionControl -&gt; Gitと選択し、Repository URLに先程作成したリポジトリのURLを指定、新規プロジェクトを作成する。 bookdownパッケージをインストールしていなければインストールしておく。 install.packages(&quot;bookdown&quot;) 1.1 Rmdファイルについて Rmdファイルはワーキングディレクトリに配置する。 デフォルトでは、Rmdファイルは名前順に結合される。例えば01-intro.Rmdの次は02-literature.Rmdといった具合に。 アンダースコア_から始まるファイルは無視される。 index.Rmdというファイルがあった場合は、常に最初のファイルとして使用される。 ファイル名に関するこれらの挙動は_bookdown.ymlというファイルをbookのディレクトリに配置し、設定を記入することで上書きできる。 例: Rmdファイルの名前と処理順序を指定したければ、rmd_filesフィールドに指定する。 rmd_files: [&quot;index.Rmd&quot;, &quot;second.Rmd&quot;, &quot;third.Rmd&quot;] 1.2 YAMLフィールドの指定 _bookdown.ymlでも指定できるが、最初のRmdファイルのYAMLメタデータでPandoc関連の設定を指定することもできる。このファイルの指定例を示す。 --- title: &quot;bookdownの説明&quot; author: &quot;かつどん&quot; date: &quot;2018-03-05&quot; site: bookdown::bookdown_site documentclass: book rmd_files: [&quot;index.Rmd&quot;, &quot;second.Rmd&quot;] output: bookdown::gitbook: default --- 1.3 ファイルの結合 Rmdファイルをマージしてからknitする(M-Kアプローチ)か、それぞれknitしてからマージする(K-Mアプローチ)か、2つの方法がある。 大きな違いはコードチャンクが同時に評価されるか、ファイルごとに評価されるかという点である。 knitrはチャンクラベルの重複を許していないため、M-Kアプローチでは全てのファイルに渡ってチャンクラベルが重複しないように注意する必要がある。K-Mアプローチでは一つのファイル内でチャンクラベルが重複しなければ良い。 K-MアプローチではRmdファイルをサブディレクトリに入れることはできないが、M-Kアプローチなら可能である。 デフォルトはM-Kアプローチであり、変更したければrender_book()呼び出し時にnew_session = TRUEを指定するか、_bookdown.ymlにnew_session: yesを指定する。 1.4 出力設定 出力に関する設定は、最初のRmdファイルにYAMLメタデータとして記載する他に、_output.ymlというファイルを作成してそこに記述する方法もある。 Rmdファイルに記述する場合は、outputフィールドに記載するが(先程の例にも含まれている)、_output.ymlに記述する場合はoutputフィールドを省略し、すべての設定をトップレベルに記述する。また、---は不要である。以下に例を示す。 bookdown::gitbook: lib_dir: assets split_by: section config: toolbar: position: static bookdown::pdf_book: keep_tex: yes bookdown::html_book: css: toc.css "],
["first-section.html", "2 first section", " 2 first section 全てはここからはじまる… "],
["second-section.html", "3 second section", " 3 second section そしてここで終わる。 "]
]
